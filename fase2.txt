##--------------------------------------- FASE 2 -------------------------------------------------------------------------------------
18/02
Create - LET, POST
Read - 
Update - PUT, INSERT, SHOW
Delete - DELETE, DEL, DROP

READ
LET
POST
SHOW
INSERT
PUT
DELETE
DELETE
DROP

pensar nos objetos
objeto aluno
objeto professor possui cadastro

//Atributos = campos de um formulário
/*documentos - prontuário/dadosalunos, informações de ocorrencias, histórico, 
declaração de matricula, boletim, diploma, atestado, RELATÓRIO - */

var studentRecord = new Object();
studentRecord.id = 
studentRecord.nameStudent = 
studentRecord.class = " ";

var occurrences = new Object();
occurrences.id = 
occurrences.nameStudent = " "

var schoolHistory = new Object();
schoolHistory. idStudent = 
schoolHistory.grade =       //nota
schoolHistory.grade =       //serie
schoolHistory.class =       //materia
-------------------------------------------------------------
19/02/25
1 - fazer uma função que se chama showDocuments ela vai pesquisar dentro do vetor o ID (ou uma coisa só .find)
2 - pegar essa função de get e fazer tratamentos
Se vc pedir 1 campo ela pesquisa 1
Se vc passar 2 ela pesquisa 2 campos

let result = getDocuments({
    search: "primeiro",
    createAt: "2000-01-31",
    clausule: "or",
    //id: 3
})
caso eu passe apenas um parametro o código quebra, isso n pode acontecer, resolva isso!

pesquisar o conceito de pivot table

//função que se chama showDocuments ela vai pesquisar dentro do vetor o ID (ou uma coisa só usando o .find)
    return documents.find( d => (d.id == req.id))//vai retornar o id solicitado no console log caso ele exista


altera essa funcao para fazer um tratamento de rejex (mascara) para que o usuário não possa inserir
as informações caso elas não sigam o padrão.

fazer isso na função de set e de put